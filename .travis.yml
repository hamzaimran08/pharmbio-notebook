sudo: 'required'

services:
  - docker

# Build and test the images (if this step fails the whole Travis build is considered a failure).
script:

#  # NOTE FOR MASTER BRANCH: tensorflow version should match the version tags from https://hub.docker.com/r/tensorflow/tensorflow/tags, i.e. "1.14.0", "1.15.0", "2.0.0" etc.
#  - tensorflow_version="1.14.0"

  # Use current branch to get tensorflow docker tag
  - tensorflow_version="${TRAVIS_BRANCH/\//-}"
  - tag="tf-${tensorflow_version}"
  - image="pharmbio-notebook"
  - echo $tag $image

  # Build CPU and GPU version of this tensorflow docker
  - docker build -t pharmbio/$image:$tag . --build-arg BASE_IMAGE=tensorflow/tensorflow:${tensorflow_version}-py3-jupyter
  - docker build -t pharmbio/$image:${tag}-gpu . --build-arg BASE_IMAGE=tensorflow/tensorflow:${tensorflow_version}-gpu-py3-jupyter

  # Test containers
  - docker run pharmbio/$image:$tag jupyter --version
  - docker run pharmbio/$image:${tag}-gpu jupyter --version

after_success:
  # Login and push image
  - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD ;
  - docker push pharmbio/$image:$tag
  - docker push pharmbio/$image:${tag}-gpu

  - patch_version_tag=${echo "$tag" | cut -d'.' -f1}.${echo "$tag" | cut -d'.' -f2}.${echo "$tag" | cut -d'.' -f3}
  - docker push pharmbio/$image:$patch_version_tag
  - docker push pharmbio/$image:${patch_version_tag}-gpu

  - minor_version_tag=${echo "$tag" | cut -d'.' -f1}.${echo "$tag" | cut -d'.' -f2}
  - docker push pharmbio/$image:$minor_version_tag
  - docker push pharmbio/$image:${minor_version_tag}-gpu

  - major_version_tag=${echo "$tag" | cut -d'.' -f1}
  - docker push pharmbio/$image:$major_version_tag
  - docker push pharmbio/$image:${major_version_tag}-gpu
